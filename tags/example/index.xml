<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Example on Ethan Kuo Blog</title>
    <link>https://blog.adminchao.com/tags/example/</link>
    <description>Recent content in Example on Ethan Kuo Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Thu, 10 Jan 2019 15:29:08 +0000</lastBuildDate><atom:link href="https://blog.adminchao.com/tags/example/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Laravel Eloquent Return Result Optimization</title>
      <link>https://blog.adminchao.com/posts/laravel-eloquent-return-result-optimization/</link>
      <pubDate>Thu, 10 Jan 2019 15:29:08 +0000</pubDate>
      
      <guid>https://blog.adminchao.com/posts/laravel-eloquent-return-result-optimization/</guid>
      <description>Preface    We all know that using the appends property in the model to build the accessor makes the return result add some field information, but then there is a disadvantage that all the return results of this model will have these field information, which is not appropriate if the interface specifies a strict return information field.
Can there be a good way to show or hide these fields dynamically?</description>
    </item>
    
    <item>
      <title>Laravel overtrue/wechat Usage</title>
      <link>https://blog.adminchao.com/posts/laravel-overtrue-wechat-usage/</link>
      <pubDate>Fri, 08 Jun 2018 12:51:35 +0000</pubDate>
      
      <guid>https://blog.adminchao.com/posts/laravel-overtrue-wechat-usage/</guid>
      <description>Web Authorization Login Middleware    Create app/Http/Middleware/WechatAuth.php middleware    1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75  public function handle($request, Closure $next, $account = &amp;#39;default&amp;#39;, $scopes = null) { // The case where $account and $scopes are written backwards  if (is_array($scopes) || (\is_string($account) &amp;amp;&amp;amp; str_is(&amp;#39;snsapi_*&amp;#39;, $account))) { list($account, $scopes) = [$scopes, $account]; $account || $account = &amp;#39;default&amp;#39;; } $isNewSession = false; $sessionKey = \sprintf(&amp;#39;user_id&amp;#39;, $account); $config = config(\sprintf(&amp;#39;wechat.</description>
    </item>
    
    <item>
      <title>Laravel Eloquent Bracket Query</title>
      <link>https://blog.adminchao.com/posts/laravel-eloquent-bracket-query/</link>
      <pubDate>Fri, 08 Jun 2018 12:36:54 +0000</pubDate>
      
      <guid>https://blog.adminchao.com/posts/laravel-eloquent-bracket-query/</guid>
      <description>Is equivalent to select * from queue_second_sold where status=0 and (buy_user_id = 341 or (sell_user_id = 341 and buy_user_id != 0)) order by id desc,and is used as follows:
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24  /** * Trading Floor - Directed Trading * @param Request $request * @return \Illuminate\Http\JsonResponse */ public function soldList(Request $request){ $type = $request-&amp;gt;get(&amp;#39;type&amp;#39;,0); // Trading Floor  $limit = $request-&amp;gt;get(&amp;#39;limit&amp;#39;,10); $user = User::getUserInfo(); if($type == 1){ //Directed Transactions  $results = QueueSecondSold::where(&amp;#39;status&amp;#39;,0) -&amp;gt;where(function($query) use ($user){ $query-&amp;gt;where(&amp;#39;sell_user_id&amp;#39;,$user-&amp;gt;id) -&amp;gt;where(&amp;#39;buy_user_id&amp;#39;,&amp;#39;!</description>
    </item>
    
  </channel>
</rss>
