<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>验证 on Ethan Kuo Blog</title>
    <link>https://blog.adminchao.com/tags/%E9%AA%8C%E8%AF%81/</link>
    <description>Recent content in 验证 on Ethan Kuo Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Thu, 08 Feb 2018 11:10:44 +0000</lastBuildDate><atom:link href="https://blog.adminchao.com/tags/%E9%AA%8C%E8%AF%81/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Laravel Validator 类用法实例</title>
      <link>https://blog.adminchao.com/posts/laravel-validator-%E7%B1%BB%E7%94%A8%E6%B3%95%E5%AE%9E%E4%BE%8B/</link>
      <pubDate>Thu, 08 Feb 2018 11:10:44 +0000</pubDate>
      
      <guid>https://blog.adminchao.com/posts/laravel-validator-%E7%B1%BB%E7%94%A8%E6%B3%95%E5%AE%9E%E4%BE%8B/</guid>
      <description>前言    Laravel 框架中 Validator 验证类用法实例。
用法    /** * 修改用户信息 * @route api/user/modify * @method post * @param Request $request * @return \Illuminate\Http\JsonResponse */ use Illuminate\Support\Facades\Validator; public function modifyUserInfo(Request $request) { //自定义验证错误信息  $messages = [ &amp;#39;password.regex&amp;#39; =&amp;gt; &amp;#39;密码必须为6-25位&amp;#39;, &amp;#39;avatar.url&amp;#39; =&amp;gt; &amp;#39;头像必须为有效的url地址&amp;#39;, &amp;#39;birthday.date_format&amp;#39; =&amp;gt; &amp;#39;生日必须为 YYYY-mm-dd 格式&amp;#39;, ]; //验证  $validator = Validator::make($request-&amp;gt;all(), [ &amp;#39;password&amp;#39; =&amp;gt; &amp;#39;regex:/^.{6,25}$/&amp;#39;, //正则验证 如有多条不能用| 必须是数组 [&amp;#39;required&amp;#39;,&amp;#39;regex:/^[a-zA-Z0-9]$/&amp;#39;]  &amp;#39;avatar&amp;#39; =&amp;gt; &amp;#39;url&amp;#39;, &amp;#39;birthday&amp;#39; =&amp;gt; &amp;#39;date_format:Y-m-d&amp;#39;, ], $messages); //以上验证通过后 继续验证  $validator-&amp;gt;after(function ($validator) use ($request) { //use ($request) 后,在这个闭包里可以用 $request  $user = User::getUserByphone($request-&amp;gt;mobile); if (!</description>
    </item>
    
  </channel>
</rss>
