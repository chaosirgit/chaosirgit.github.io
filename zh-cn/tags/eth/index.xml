<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Eth on 郭超超的博客</title><link>https://blog.adminchao.com/zh-cn/tags/eth/</link><description>Recent content in Eth on 郭超超的博客</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Wed, 09 Mar 2022 05:04:02 +0000</lastBuildDate><atom:link href="https://blog.adminchao.com/zh-cn/tags/eth/index.xml" rel="self" type="application/rss+xml"/><item><title>EIP-712:如何打造以太坊一键登录应用</title><link>https://blog.adminchao.com/zh-cn/posts/eip-712%E5%A6%82%E4%BD%95%E6%89%93%E9%80%A0%E4%BB%A5%E5%A4%AA%E5%9D%8A%E4%B8%80%E9%94%AE%E7%99%BB%E5%BD%95%E5%BA%94%E7%94%A8/</link><pubDate>Wed, 09 Mar 2022 05:04:02 +0000</pubDate><guid>https://blog.adminchao.com/zh-cn/posts/eip-712%E5%A6%82%E4%BD%95%E6%89%93%E9%80%A0%E4%BB%A5%E5%A4%AA%E5%9D%8A%E4%B8%80%E9%94%AE%E7%99%BB%E5%BD%95%E5%BA%94%E7%94%A8/</guid><description>前言 使用以太坊 EIP-712 协议签名授权 DAPP 登录
设计 前端使用签名之前需要授权应用连接钱包 获得授权成功后的钱包地址 然后点击签名按钮 使用钱包地址请求后端 获得随机数 功能接口 后端生成随机数，把钱包地址作为键，随机数作为值，放入缓存，过期时间 5 分钟(安全考虑) 前端把随机数写入签名消息体 调用钱包签名 获得的签名请求后端 登录 功能接口 后端对签名进行解密 验证解密后的钱包地址与提交的地址是否一致 通过注册或登录 不通过提示错误信息 后端 获得随机数 的功能接口不在此文档记录
实现步骤 连接钱包 签名之前需要先授权连接钱包。
Web3 前端篇
模板 1 2 3 4 &amp;lt;div&amp;gt; &amp;lt;h3&amp;gt;Sign Typed Data V4&amp;lt;/h3&amp;gt; &amp;lt;button type=&amp;#34;button&amp;#34; id=&amp;#34;signTypedDataV4Button&amp;#34;&amp;gt;sign typed data v4&amp;lt;/button&amp;gt; &amp;lt;/div&amp;gt; Javascript 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 &amp;lt;script&amp;gt; signTypedDataV4Button.</description></item><item><title>Web3 用法介绍(后端篇-Golang)</title><link>https://blog.adminchao.com/zh-cn/posts/web3-%E7%94%A8%E6%B3%95%E4%BB%8B%E7%BB%8D%E5%90%8E%E7%AB%AF%E7%AF%87-go/</link><pubDate>Tue, 08 Mar 2022 09:46:36 +0000</pubDate><guid>https://blog.adminchao.com/zh-cn/posts/web3-%E7%94%A8%E6%B3%95%E4%BB%8B%E7%BB%8D%E5%90%8E%E7%AB%AF%E7%AF%87-go/</guid><description>前言 去年至今已完成了两个 DAPP，对于 Web3 也又了一定的认识，这篇记录的是后端库 go-web3 的用法。
前端篇
后端篇-PHP
安装 1 2 3 go get github.com/chenzhijie/go-web3 go get github.com/chenzhijie/go-web3/types go get github.com/ethereum/go-ethereum/common 提供者 初始化 1 2 3 4 5 6 7 var rpcHost = &amp;#34;https://bsc-dataseed1.defibit.io&amp;#34; Web3, err := web3.NewWeb3(rpcHost) if err != nil { panic(err) } chainId := int64(56) Web3.Eth.SetChainId(chainId) 链上交互 初始化 1 2 3 4 5 6 7 //根据私钥获得公钥地址 var PrivateKey = &amp;#34;6...............5&amp;#34; err := Web3.Eth.SetAccount(PrivateKey) err != nil { panic(err) } address := Web3.</description></item><item><title>Web3 用法介绍(后端篇-PHP)</title><link>https://blog.adminchao.com/zh-cn/posts/web3-%E7%94%A8%E6%B3%95%E4%BB%8B%E7%BB%8D%E5%90%8E%E7%AB%AF%E7%AF%87-php/</link><pubDate>Mon, 07 Mar 2022 15:38:12 +0000</pubDate><guid>https://blog.adminchao.com/zh-cn/posts/web3-%E7%94%A8%E6%B3%95%E4%BB%8B%E7%BB%8D%E5%90%8E%E7%AB%AF%E7%AF%87-php/</guid><description>前言 去年至今已完成了两个 DAPP，对于 Web3 也又了一定的认识，这篇记录的是后端库 web3.php 的用法。
前端篇
后端篇-Golang
安装 Web3.php
如果使用 Laravel 8 以下版本 即 GuzzleHttp 6.x ,可安装 sc0vu/web3.php
在 composer.json 找到 以下并修改
1 &amp;#34;minimum-stability&amp;#34;: &amp;#34;dev&amp;#34; Then
1 2 composer require sc0vu/web3.php dev-master composer require web3p/ethereum-tx //如果需要发送交易 如果使用 Laravel 8 以上 即 GuzzleHttp &amp;gt; 7.x , 参考 [issues/199](
在 composer.json 中添加
1 2 3 4 5 6 7 8 9 10 &amp;#34;require&amp;#34;: { &amp;#34;sc0vu/web3.php&amp;#34;: &amp;#34;dev-g7&amp;#34;, }, &amp;#34;repositories&amp;#34;: [ { &amp;#34;type&amp;#34;: &amp;#34;vcs&amp;#34;, &amp;#34;url&amp;#34;: &amp;#34;https://github.</description></item><item><title>Web3 用法介绍(前端篇)</title><link>https://blog.adminchao.com/zh-cn/posts/web3-%E7%94%A8%E6%B3%95%E4%BB%8B%E7%BB%8D%E5%89%8D%E7%AB%AF%E7%AF%87/</link><pubDate>Sun, 06 Mar 2022 15:21:19 +0000</pubDate><guid>https://blog.adminchao.com/zh-cn/posts/web3-%E7%94%A8%E6%B3%95%E4%BB%8B%E7%BB%8D%E5%89%8D%E7%AB%AF%E7%AF%87/</guid><description>前言 去年至今已完成了两个 DAPP，对于 Web3 也又了一定的认识，这篇记录的是前端库 web3.js 的用法。
后端篇-PHP
后端篇-Golang
安装 1 npm install web3 WalletConnect 以便手机端使用
1 npm install @walletconnect/web3-provider 提供者 提供者一般作为与钱包交互时调用,以及监听一些事件
初始化 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 if (window.ethereum){ //如果有新版小狐狸优先使用 this.walletProvider = window.ethereum }else if (window.web3){ //其次使用老版小狐狸的 this.walletProvider = window.web3.currentProvider }else{ //以上都没有使用 walletConnect this.walletProvider = new WalletConnectProvider({ rpc: { // 56: &amp;#34;https://bsc-dataseed.binance.org&amp;#34; 97: &amp;#34;https://data-seed-prebsc-1-s1.</description></item></channel></rss>