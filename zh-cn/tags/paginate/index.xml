<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Paginate on 郭超超的博客</title><link>https://blog.adminchao.com/zh-cn/tags/paginate/</link><description>Recent content in Paginate on 郭超超的博客</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Fri, 08 Jun 2018 11:56:23 +0000</lastBuildDate><atom:link href="https://blog.adminchao.com/zh-cn/tags/paginate/index.xml" rel="self" type="application/rss+xml"/><item><title>Laravel Paginate 分页</title><link>https://blog.adminchao.com/zh-cn/posts/laravel-paginate-%E5%88%86%E9%A1%B5/</link><pubDate>Fri, 08 Jun 2018 11:56:23 +0000</pubDate><guid>https://blog.adminchao.com/zh-cn/posts/laravel-paginate-%E5%88%86%E9%A1%B5/</guid><description>前言 使用 Laravel Eloquent 的 paginate 方法会很容易对数据进行分页。非常好用！我太喜欢了。
使用 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 //paginate 源码 public function paginate($perPage = 15, $columns = [&amp;#39;*&amp;#39;], $pageName = &amp;#39;page&amp;#39;, $page = null) { $page = $page ?: Paginator::resolveCurrentPage($pageName); $total = $this-&amp;gt;getCountForPagination($columns); $results = $total ? $this-&amp;gt;forPage($page, $perPage)-&amp;gt;get($columns) : collect(); return $this-&amp;gt;paginator($results, $total, $perPage, $page, [ &amp;#39;path&amp;#39; =&amp;gt; Paginator::resolveCurrentPath(), &amp;#39;pageName&amp;#39; =&amp;gt; $pageName, ]); } public function showApi(Request $request) { $limit = $request-&amp;gt;get(&amp;#39;limit&amp;#39;); //$page = $request-&amp;gt;get(&amp;#39;page&amp;#39;); $results = Seller::paginate($limit); //无须接收 $page ,laravel 自动接收 //$results = Seller::forPage($page,$limit)-&amp;gt;get(); 或者用这种 //$results = Seller::paginate($limit,[&amp;#39;*&amp;#39;],&amp;#39;page&amp;#39;,5); //paginate 控制page return response()-&amp;gt;json([&amp;#39;code&amp;#39; =&amp;gt; 0, &amp;#39;data&amp;#39; =&amp;gt; $results-&amp;gt;items(), &amp;#39;count&amp;#39; =&amp;gt; $results-&amp;gt;total()]); }</description></item></channel></rss>