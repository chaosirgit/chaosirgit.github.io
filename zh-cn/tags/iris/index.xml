<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>iris on 郭超超的博客</title><link>https://blog.adminchao.com/zh-cn/tags/iris/</link><description>Recent content in iris on 郭超超的博客</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Tue, 03 Mar 2020 08:40:28 +0000</lastBuildDate><atom:link href="https://blog.adminchao.com/zh-cn/tags/iris/index.xml" rel="self" type="application/rss+xml"/><item><title>Iris MVC路由(三)</title><link>https://blog.adminchao.com/zh-cn/posts/iris-mvc%E8%B7%AF%E7%94%B1-%E4%B8%89/</link><pubDate>Tue, 03 Mar 2020 08:40:28 +0000</pubDate><guid>https://blog.adminchao.com/zh-cn/posts/iris-mvc%E8%B7%AF%E7%94%B1-%E4%B8%89/</guid><description>定义路由 在根目录 main.go 输入以下内容
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 package main import ( &amp;#34;github.com/kataras/iris&amp;#34; &amp;#34;github.com/kataras/iris/mvc&amp;#34; &amp;#34;./controllers&amp;#34; ) func main() { app := iris.New() // 注册视图目录 app.RegisterView(iris.HTML(&amp;#34;./views&amp;#34;, &amp;#34;.html&amp;#34;)) // 定义根路由控制器 mvc.New(app).Handle(new(controllers.DefaultController)) // 定义用户分组路由控制器 mvc.New(app.Party(&amp;#34;/user&amp;#34;)).Handle(new(controllers.UserController)) app.Run(iris.Addr(&amp;#34;:80&amp;#34;)) } 创建控制器 创建 controllers/UserController.go 输入以下内容
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 package controllers import ( &amp;#34;github.</description></item><item><title>Iris 安装及初始(二)</title><link>https://blog.adminchao.com/zh-cn/posts/iris-%E5%AE%89%E8%A3%85%E5%8F%8A%E5%88%9D%E5%A7%8B-%E4%BA%8C/</link><pubDate>Sun, 01 Mar 2020 19:21:06 +0000</pubDate><guid>https://blog.adminchao.com/zh-cn/posts/iris-%E5%AE%89%E8%A3%85%E5%8F%8A%E5%88%9D%E5%A7%8B-%E4%BA%8C/</guid><description>安装 要求 GO &amp;gt;= 1.8 推荐 1.9
1 go get -u github.com/kataras/iris 初始化 Web 服务 1 2 3 4 5 6 7 8 9 10 11 12 package main import ( &amp;#34;github.com/kataras/iris&amp;#34; ) func main() { //创建APP app := iris.New() //监听端口 app.Run(iris.Addr(&amp;#34;:80&amp;#34;),iris.WithoutServerError(iris.ErrServerClosed)) } 配置 Iris 支持 .tml .yml .json 3种配置文件。使用 json 文件配置需要自定义配置结构，这里我们选用 .yml 文件。
~/gopath/MyApp/config/setting.yml
1 2 3 4 5 6 7 8 DisablePathCorrection: false EnablePathEscape: false FireMethodNotAllowed: true DisableBodyConsumptionOnUnmarshal: true TimeFormat: Mon, 01 Jan 2006 15:04:05 GMT Charset: UTF-8 Other: ProjectName: Myiris 使用</description></item><item><title>Iris I Love She(一)</title><link>https://blog.adminchao.com/zh-cn/posts/iris-i-love-she-%E4%B8%80/</link><pubDate>Sun, 01 Mar 2020 14:17:47 +0000</pubDate><guid>https://blog.adminchao.com/zh-cn/posts/iris-i-love-she-%E4%B8%80/</guid><description>前言 ​ GO 语言风靡全球，国外如 Google、AWS、Cloudflare、CoreOS 等，国内如七牛、阿里等都已经开始大规模使用 Golang 开发其云计算相关产品。 在学习 GO 的过程中，我也深深的被 GO 折服。且 GO 语言原生支持高并发，性能强劲，如果熟练的话，开发效率不差于 Python 等语言。
​ 在疫情肆虐的今天，终于可以静下心来认真体验一下 GO 的魅力了。
​ 由于目前业务主要为 Web 应用，所以首先学习一种 Web 框架以便快速提供生产力。
框架的选择 Google 了一下 GO 的 Web 框架，有诸如：
Beego：开源的高性能 Go 语言 Web 框架。 Buffalo：使用 Go 语言快速构建 Web 应用。 Echo：简约的高性能 Go 语言 Web 框架。 Gin：Go 语言编写的 Web 框架，以更好的性能实现类似 Martini 框架的 Api。 Iris：全宇宙最快的 Go 语言 Web 框架。完备 MVC 支持，未来尽在掌握。 Revel：Go 语言的高效、全栈 Web 框架。 其中，我一眼就相中了 Iris 不只是因为她号称全宇宙最快、完备支持 MVC 吸引了我，更因为她的名字： 爱丽丝</description></item></channel></rss>