<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Scope on 郭超超的博客</title><link>https://blog.ethankuo.info/zh-cn/tags/scope/</link><description>Recent content in Scope on 郭超超的博客</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Fri, 08 Jun 2018 11:41:08 +0000</lastBuildDate><atom:link href="https://blog.ethankuo.info/zh-cn/tags/scope/index.xml" rel="self" type="application/rss+xml"/><item><title>Laravel 全局作用域</title><link>https://blog.ethankuo.info/zh-cn/posts/laravel-%E5%85%A8%E5%B1%80%E4%BD%9C%E7%94%A8%E5%9F%9F/</link><pubDate>Fri, 08 Jun 2018 11:41:08 +0000</pubDate><guid>https://blog.ethankuo.info/zh-cn/posts/laravel-%E5%85%A8%E5%B1%80%E4%BD%9C%E7%94%A8%E5%9F%9F/</guid><description>前言 全局作用域是用来全局添加执行约束的，添加过后涉及到的模型操作全部添加此约束。如：原 select * from user 添加过后变为 select * from user where is_delete = 0
用法 建立 App/Scopes/SiteScope.php ： 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 &amp;lt;?php namespace App\Scopes; use App\Site; use Illuminate\Database\Eloquent\ScopeInterface; use Illuminate\Database\Eloquent\Model; use Illuminate\Database\Eloquent\Builder; class SiteScope implements ScopeInterface{ public function apply(Builder $builder, Model $model) { $site = Site::getSiteId(); return $builder-&amp;gt;where(&amp;#39;site_id&amp;#39;, $site); } public function remove(Builder $builder, Model $model) //必须有remove { $column = $model-&amp;gt;getQualifiedDeletedAtColumn(); $query = $builder-&amp;gt;getQuery(); foreach ((array) $query-&amp;gt;wheres as $key =&amp;gt; $where) { // If the where clause is a soft delete date constraint, we will remove it from // the query and reset the keys on the wheres.</description></item></channel></rss>